from data import *
import telebot
from telebot import types

predlojka_bot = telebot.TeleBot(TOKEN)
# object!="" or object!='None' or object != None or object!=''
print("predlojka.py in –ü—Ä–µ–¥–ª–æ–∂–∫–∞ –ò–º–ø–µ—Ä–∏–∏ succesfully started")

def none_type(object):
	return "" if object==None else f'{object}'

@predlojka_bot.message_handler(commands=['start'])
def start(message):
	predlojka_bot.reply_to(message, text="–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ\!\!\! –î–æ–±—Ä–æ –ø–æ–¥–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ü—Ä–µ–¥–ª–æ–∂–∫—É –ò–º–ø–µ—Ä–∏–∏\!\n–ü—Ä–∏—Å—ã–ª–∞–π—Ç–µ —Å—é–¥–∞ –≤—Å—ë, —á—Ç–æ —Ç–æ–ª—å–∫–æ –¥—É—à–µ —É–≥–æ–¥–Ω–æ, –∞ —è –ø–µ—Ä–µ–¥–∞–º –∞–¥–º–∏–Ω—É –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ\! –ï—Å–ª–∏ –µ–≥–æ –≤—Å—ë —É—Å—Ç—Ä–æ–∏—Ç, –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±—É–¥–µ—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ\!\n\n_P\.S\. –ê–Ω–æ–Ω–∏–º–∫–∏ –ø–æ–∫–∞ –Ω–µ—Ç_", parse_mode='MarkdownV2')
@predlojka_bot.message_handler(commands=['help'])
def help(message):
	predlojka_bot.reply_to(message, text="–ê —á—ë —Ç–µ–±–µ –ø–æ–º–æ–≥–∞—Ç—å, —Å–∞–º —Ä–∞–∑–±–µ—Ä—ë—à—å—Å—è", parse_mode='MarkdownV2')

@predlojka_bot.message_handler(content_types=['sticker', 'video', 'photo', 'text', 'document', 'audio', 'voice'])
def accepter(message):
	if message.chat.id != channel and message.chat.id != channel_red and message.chat.id != -1002228334833:
		markup = types.InlineKeyboardMarkup()
		user_name=f'\n\nüë§ {message.from_user.first_name} {message.from_user.last_name if message.from_user.last_name != None else ""}'
		predlojka_bot.send_message(message.chat.id, f"–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, {user_name[4:]}!!!")

		markup.add(types.InlineKeyboardButton("–û–¥–æ–±—Ä–∏—Ç—å", callback_data="+" + user_name))
		markup.add(types.InlineKeyboardButton("–ó–∞–ø—Ä–µ—Ç–∏—Ç—å", callback_data="-"))
		print(f"Predlojka get new message! It is {message.content_type}")

		if message.content_type == 'text':
			predlojka_bot.send_message(admin, message.text + user_name, reply_markup=markup)

		elif message.content_type == 'sticker':
			markup = types.InlineKeyboardMarkup()
			markup.add(types.InlineKeyboardButton("–û–¥–æ–±—Ä–∏—Ç—å", callback_data="&" + user_name))
			markup.add(types.InlineKeyboardButton("–ó–∞–ø—Ä–µ—Ç–∏—Ç—å", callback_data="-"))
			predlojka_bot.send_sticker(admin, message.sticker.file_id, reply_markup=markup)
	
		elif message.content_type == 'video':
			predlojka_bot.send_video(admin, message.video.file_id, reply_markup=markup, caption = none_type(message.caption) + user_name)
		
		elif message.content_type == 'photo':
			predlojka_bot.send_photo(admin, message.photo[0].file_id, reply_markup=markup, caption = none_type(message.caption) + user_name)
		
		elif message.content_type == 'document':
			predlojka_bot.send_document(admin, message.document.file_id, reply_markup=markup, caption = none_type(message.caption) + user_name)

		elif message.content_type == 'audio':
			predlojka_bot.send_audio(admin, message.audio.file_id, reply_markup=markup, caption = none_type(message.caption) + user_name)

		elif message.content_type == 'voice':
			predlojka_bot.send_voice(admin, message.voice.file_id, reply_markup=markup, caption = none_type(message.caption) + user_name)


@predlojka_bot.callback_query_handler(func=lambda call: (call.data).startswith("+"))
def sender(call):
	predlojka_bot.copy_message(channel, admin, call.message.id)
	predlojka_bot.delete_message(admin, call.message.id)
	print("post was accepted")

@predlojka_bot.callback_query_handler(func=lambda call: (call.data).startswith("&"))
def st_sender(call):
	predlojka_bot.copy_message(channel, admin, call.message.id)
	predlojka_bot.send_message(channel, call.data[1:], disable_notification=True)
	predlojka_bot.delete_message(admin, call.message.id)
	print("sticker was accepted")

@predlojka_bot.callback_query_handler(func=lambda call: (call.data).startswith("-"))
def denier(call):
	predlojka_bot.delete_message(admin, message_id=call.message.id)
	print("post was rejected")

predlojka_bot.infinity_polling()