from data import db, predlojka_bot, chat_mishas_den, admin
from tinydb import Query
from datetime import datetime, timedelta

BIRTHDAY_TABLE = "birthdays"





def send_daily_birthdays():
    try:
        text = format_birthdays_list()
        predlojka_bot.send_message(chat_mishas_den, text)
        predlojka_bot.send_message(admin, "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–æ!")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –¥–Ω–µ–π —Ä–æ–∂–¥–µ–Ω–∏–π: {e}")





def add_birthday(user_id, name, date_str):
    """
    –î–æ–±–∞–≤–ª—è–µ—Ç –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    date_str ‚Äî —Å—Ç—Ä–æ–∫–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ '–î–î.–ú–ú' –∏–ª–∏ '–î–î.–ú–ú.–ì–ì–ì–ì'
    """
    try:
        # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–∞—Ç—É
        if len(date_str.split(".")) == 2:
            bday = datetime.strptime(date_str, "%d.%m")
            year = 2000  # —Ñ–∏–∫—Ç–∏–≤–Ω—ã–π –≥–æ–¥
        else:
            bday = datetime.strptime(date_str, "%d.%m.%Y")
            year = bday.year
        db.table(BIRTHDAY_TABLE).upsert({
            "user_id": user_id,
            "name": name,
            "day": bday.day,
            "month": bday.month,
            "year": year
        }, Query().user_id == user_id)
        return True
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –¥–Ω—è —Ä–æ–∂–¥–µ–Ω–∏—è: {e}")
        return False

def add_birthday_by_username(username, date_str, chat_id):
    try:
        user = predlojka_bot.get_chat_member(chat_id, username)
        first_name = user.user.first_name or ""
        last_name = user.user.last_name or ""
        name = f"{first_name} {last_name}".strip()
        if len(date_str.split(".")) == 2:
            bday = datetime.strptime(date_str, "%d.%m")
            year = 2000
        else:
            bday = datetime.strptime(date_str, "%d.%m.%Y")
            year = bday.year
        db.table(BIRTHDAY_TABLE).upsert({
            "user_id": user.user.id,
            "name": name,
            "username": username,
            "day": bday.day,
            "month": bday.month,
            "year": year
        }, Query().user_id == user.user.id)
        return True, name
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –¥–Ω—è —Ä–æ–∂–¥–µ–Ω–∏—è: {e}")
        return False, None

def get_all_birthdays():
    return db.table(BIRTHDAY_TABLE).all()

def days_until_birthday(day, month):
    today = datetime.now().date()  # —Ç–æ–ª—å–∫–æ –¥–∞—Ç–∞, –±–µ–∑ –≤—Ä–µ–º–µ–Ω–∏
    this_year = today.year
    try:
        bday = datetime(this_year, month, day).date()
    except ValueError:
        
        # –æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã—Ö –¥–∞—Ç
        return -1
    if bday < today:
        bday = datetime(this_year + 1, month, day).date()
    return (bday - today).days


def plural_days(n):
    n = abs(n)
    if 11 <= n % 100 <= 14:
        return "–¥–Ω–µ–π"
    if n % 10 == 1:
        return "–¥–µ–Ω—å"
    if 2 <= n % 10 <= 4:
        return "–¥–Ω—è"
    return "–¥–Ω–µ–π"


def refresh_user_names(chat_id):
    """
    –û–±–Ω–æ–≤–ª—è–µ—Ç –∏–º–µ–Ω–∞ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–∞–∑–µ, –µ—Å–ª–∏ –æ–Ω–∏ –∏–∑–º–µ–Ω–∏–ª–∏—Å—å.
    """
    table = db.table(BIRTHDAY_TABLE)
    users = table.all()
    for user in users:
        user_id = user.get("user_id")
        try:
            chat_member = predlojka_bot.get_chat_member(chat_id, user_id)
            first_name = chat_member.user.first_name or ""
            last_name = chat_member.user.last_name or ""
            name = f"{first_name} {last_name}".strip()
            if user.get("name") != name:
                table.update({"name": name}, Query().user_id == user_id)
        except Exception as e:
            print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –∏–º—è –¥–ª—è user_id={user_id}: {e}")



def format_birthdays_list(who_asking_flag=0):
    refresh_user_names(chat_mishas_den)
    bdays = get_all_birthdays()
    if not bdays:
        return "–°–ø–∏—Å–æ–∫ –¥–Ω–µ–π —Ä–æ–∂–¥–µ–Ω–∏–π –ø—É—Å—Ç."
    result = []
    
    for b in bdays:
        days_left = days_until_birthday(b["day"], b["month"])
        if days_left == 0:
            result.append(f'> {b["name"]}: —Å–µ–≥–æ–¥–Ω—è –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è! üéâ')
        else:
            result.append(f'> {b["name"]}: {days_left} {plural_days(days_left)}')

    result.sort(key=lambda x: int(x.split(": ")[1].split(" ")[0]))
    if who_asking_flag == 0: return "–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –¥–Ω—è—Ö —Ä–æ–∂–¥–µ–Ω–∏–π –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤!\n\n" + "\n".join(result)
    elif who_asking_flag == 1: 
        result = result[:2]
        return "–í–æ—Ç –±–ª–∏–∂–∞–π—à–∏–µ –¥–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!\n" + "\n".join(result)

def send_personal_birthday_notifications():
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∫–∞–∂–¥–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ª–∏—á–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –µ–≥–æ –¥–Ω–µ —Ä–æ–∂–¥–µ–Ω–∏—è.
    """
    bdays = get_all_birthdays()
    for b in bdays:
        if not b.get("personal_notify"):
            continue
        user_id = b.get("user_id")
        name = b.get("name")
        day = b.get("day")
        month = b.get("month")
        days_left = days_until_birthday(day, month)
        subscribers_list = format_birthdays_list(who_asking_flag=1)

        if days_left == 0:
            first_text = f"üéâ {name}, —Å–µ–≥–æ–¥–Ω—è –≤–∞—à –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è! –ü–æ–∑–¥—Ä–∞–≤–ª—è—é! üéÇ"
        elif days_left > 0:
            first_text = f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {name}!\n–î–æ –≤–∞—à–µ–≥–æ –¥–Ω—è —Ä–æ–∂–¥–µ–Ω–∏—è –æ—Å—Ç–∞–ª–æ—Å—å {days_left} {plural_days(days_left)}."
        else:
            continue  # –≤ —Ç–µ–æ—Ä–∏–∏, –ø—Ä–æ–ø—É—Å–∫ –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω—ã—Ö –¥–∞—Ç. –í —Ç–µ–æ—Ä–∏–∏.
        try:
            fin_text = f"{first_text}\n\n{subscribers_list}"
            predlojka_bot.send_message(user_id, fin_text)
        except Exception as e:
            print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ª–∏—á–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è user_id={user_id}: {e}")